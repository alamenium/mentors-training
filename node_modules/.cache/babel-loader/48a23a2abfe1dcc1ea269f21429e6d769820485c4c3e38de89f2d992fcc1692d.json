{"ast":null,"code":"var _jsxFileName = \"/Users/alamenium/Desktop/Projects/kuwait-codes/src/Components/UserPanel.js\";\nimport React from 'react';\nimport mailLogo from '../images/mail.png';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst postData = async event => {\n  const url = 'http://localhost:3011/api/test-email/';\n  const requestBody = {\n    email: 'cruncogames@gmail.com',\n    subject: 'hello',\n    text: 'hi'\n  };\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(requestBody)\n    });\n    if (!response.ok) {\n      throw new Error('Request failed with status ' + response.status);\n    }\n    const data = await response.json();\n    console.log('Response:', data);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nasync function sendMailHandler() {\n  console.log(\"the\");\n  await postData();\n}\nconst UserPanel = () => {\n  const postData = async () => {\n    const url = 'http://localhost:3011/api/test-email/';\n    const requestBody = {\n      email: 'cruncogames@gmail.com',\n      subject: 'hello',\n      text: 'hi'\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error('Request failed with status ' + response.status);\n      }\n      const data = await response.json();\n      console.log('Response:', data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: postData,\n      children: \"Send Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_c = UserPanel;\nexport default UserPanel;\nvar _c;\n$RefreshReg$(_c, \"UserPanel\");","map":{"version":3,"names":["React","mailLogo","useState","jsxDEV","_jsxDEV","postData","event","url","requestBody","email","subject","text","headers","response","fetch","method","body","JSON","stringify","ok","Error","status","data","json","console","log","error","sendMailHandler","UserPanel","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alamenium/Desktop/Projects/kuwait-codes/src/Components/UserPanel.js"],"sourcesContent":["import React from 'react';\nimport mailLogo from '../images/mail.png'\nimport {useState} from \"react\";\n\nconst postData = async (event) =>{\n    const url = 'http://localhost:3011/api/test-email/';\n    const requestBody = {\n        email: 'cruncogames@gmail.com',\n        subject: 'hello',\n        text: 'hi'\n    };\n\n    const headers = {\n        'Content-Type': 'application/json'\n    };\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(requestBody)\n        });\n\n        if (!response.ok) {\n            throw new Error('Request failed with status ' + response.status);\n        }\n\n        const data = await response.json();\n        console.log('Response:', data);\n    } catch (error) {\n        console.error('Error:', error);\n    }\n}\n\nasync function sendMailHandler(){\n    console.log(\"the\")\n    await postData();\n}\n\nconst UserPanel = () => {\n    const postData = async () => {\n        const url = 'http://localhost:3011/api/test-email/';\n        const requestBody = {\n            email: 'cruncogames@gmail.com',\n            subject: 'hello',\n            text: 'hi'\n        };\n\n        const headers = {\n            'Content-Type': 'application/json'\n        };\n\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify(requestBody)\n            });\n\n            if (!response.ok) {\n                throw new Error('Request failed with status ' + response.status);\n            }\n\n            const data = await response.json();\n            console.log('Response:', data);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={postData}>Send Request</button>\n        </div>\n    );\n};\nexport default UserPanel;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAG,MAAOC,KAAK,IAAI;EAC7B,MAAMC,GAAG,GAAG,uCAAuC;EACnD,MAAMC,WAAW,GAAG;IAChBC,KAAK,EAAE,uBAAuB;IAC9BC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;EACV,CAAC;EAED,MAAMC,OAAO,GAAG;IACZ,cAAc,EAAE;EACpB,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;MAC9BQ,MAAM,EAAE,MAAM;MACdH,OAAO,EAAEA,OAAO;MAChBI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;IACpC,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACM,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,GAAGP,QAAQ,CAACQ,MAAM,CAAC;IACpE;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,IAAI,CAAC;EAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC;AACJ,CAAC;AAED,eAAeC,eAAeA,CAAA,EAAE;EAC5BH,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClB,MAAMpB,QAAQ,CAAC,CAAC;AACpB;AAEA,MAAMuB,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMvB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAME,GAAG,GAAG,uCAAuC;IACnD,MAAMC,WAAW,GAAG;MAChBC,KAAK,EAAE,uBAAuB;MAC9BC,OAAO,EAAE,OAAO;MAChBC,IAAI,EAAE;IACV,CAAC;IAED,MAAMC,OAAO,GAAG;MACZ,cAAc,EAAE;IACpB,CAAC;IAED,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;QAC9BQ,MAAM,EAAE,MAAM;QACdH,OAAO,EAAEA,OAAO;QAChBI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;MACpC,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACM,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,GAAGP,QAAQ,CAACQ,MAAM,CAAC;MACpE;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAED,oBACItB,OAAA;IAAAyB,QAAA,eACIzB,OAAA;MAAQ0B,OAAO,EAAEzB,QAAS;MAAAwB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAACC,EAAA,GApCIP,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}