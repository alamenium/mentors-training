{"ast":null,"code":"export const postData = async () => {\n  const url = 'http://localhost:3011/api/test-email/';\n  const requestBody = {\n    email: 'cruncogames@gmail.com',\n    subject: 'hello',\n    text: 'hi'\n  };\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(requestBody)\n    });\n    if (!response.ok) {\n      throw new Error('Request failed with status ' + response.status);\n    }\n    const data = await response.json();\n    console.log('Response:', data);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\npostData();","map":{"version":3,"names":["postData","url","requestBody","email","subject","text","headers","response","fetch","method","body","JSON","stringify","ok","Error","status","data","json","console","log","error"],"sources":["/Users/alamenium/Desktop/Projects/kuwait-codes/src/tester.js"],"sourcesContent":["\n\nexport const postData = async () =>{\n    const url = 'http://localhost:3011/api/test-email/';\n    const requestBody = {\n        email: 'cruncogames@gmail.com',\n        subject: 'hello',\n        text: 'hi'\n    };\n\n    const headers = {\n        'Content-Type': 'application/json'\n    };\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(requestBody)\n        });\n\n        if (!response.ok) {\n            throw new Error('Request failed with status ' + response.status);\n        }\n\n        const data = await response.json();\n        console.log('Response:', data);\n    } catch (error) {\n        console.error('Error:', error);\n    }\n}\n\npostData();\n\n\n\n"],"mappings":"AAEA,OAAO,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAW;EAC/B,MAAMC,GAAG,GAAG,uCAAuC;EACnD,MAAMC,WAAW,GAAG;IAChBC,KAAK,EAAE,uBAAuB;IAC9BC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;EACV,CAAC;EAED,MAAMC,OAAO,GAAG;IACZ,cAAc,EAAE;EACpB,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;MAC9BQ,MAAM,EAAE,MAAM;MACdH,OAAO,EAAEA,OAAO;MAChBI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;IACpC,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACM,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,GAAGP,QAAQ,CAACQ,MAAM,CAAC;IACpE;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,IAAI,CAAC;EAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC;AACJ,CAAC;AAEDpB,QAAQ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}